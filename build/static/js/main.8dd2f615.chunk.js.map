{"version":3,"sources":["logo.svg","components/Firebase.js","components/popup.js","components/todoCard.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","apps","length","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Popup","props","React","useState","input","setInput","className","onClick","handleClose","id","type","placeholder","value","onChange","e","target","firestore","collection","doc","update","item","TodoCard","isOpen","setIsOpen","togglePopup","text","delete","App","useEffect","getTodos","todos","setTodos","onSnapshot","querySnapShot","saveFirebaseTodos","forEach","push","data","todo","trim","add","then","snapshot","set","saveTodo","style","overflowY","map","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8dd2f615.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import firebase from \"firebase/app\"; \r\nimport \"firebase/firestore\";\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyA3PrU8WIBYlNcTgbAVZdcRH0HuEzXfMJA\",\r\n  authDomain: \"learning-97e21.firebaseapp.com\",\r\n  databaseURL: \"https://learning-97e21-default-rtdb.firebaseio.com\",\r\n  projectId: \"learning-97e21\",\r\n  storageBucket: \"learning-97e21.appspot.com\",\r\n  messagingSenderId: \"15948519487\",\r\n  appId: \"1:15948519487:web:20aa66b15058febef4008a\",\r\n  measurementId: \"G-SJHWDTV8LZ\",\r\n};\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(firebaseConfig);\r\n} else {\r\n  firebase.app();\r\n}\r\n\r\n","import React from \"react\";\r\nimport \"./popup.css\";\r\nimport \"./Firebase\";\r\nimport firebase from \"firebase/app\";\r\n\r\nfunction Popup(props) {\r\n  const [input, setInput] = React.useState(\"\");\r\n  const updateTodo = () => {\r\n    const editTodo = firebase.firestore().collection(\"todos\");\r\n    editTodo.doc(props.id).update({\r\n      item: input,\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"popup-box\">\r\n      \r\n        <span className=\"close-icon\" onClick={props.handleClose}>\r\n          x\r\n        </span>\r\n        <h1 id = \"popupHeading\">Edit To-Do</h1>\r\n        <>\r\n          <input\r\n            type=\"text\"\r\n            id=\"inputBox\"\r\n            placeholder=\"Add todo...\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n          ></input>\r\n        </>\r\n                \r\n        <button onClick={updateTodo} id = \"popupUpdateTodoButton\"><span id = \"popupUpdateTodoButtonText\">Update</span></button>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Popup;\r\n","import React from \"react\";\r\nimport \"./todoCard.css\";\r\nimport \"./Firebase\";\r\nimport firebase from \"firebase/app\";\r\nimport Popup from \"./popup\";\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nexport default function TodoCard(props) {\r\n  const deleteTodo = () => {\r\n    const deleteFromFirebase = firebase.firestore().collection(\"todos\");\r\n    deleteFromFirebase.doc(props.id).delete();\r\n  };\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const togglePopup = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  return (\r\n    <div id=\"mainCon\">\r\n      <h2 id=\"todoText\">{props.text}</h2>\r\n      <button onClick={deleteTodo} id = \"deleteTodoIcon\"><DeleteForeverIcon id  = \"d\" /></button>\r\n      <button onClick={togglePopup} id = \"editTodoIcon\"><EditIcon id = \"e\" /></button>\r\n      \r\n      {isOpen && <Popup handleClose={togglePopup} id={props.id} />}\r\n    </div>\r\n  );\r\n}\r\n\r\n//export default TodoCard;\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React from \"react\";\nimport TodoCard from \"./components/todoCard\";\nimport firebase from \"firebase/app\"; // Firebase Library\nimport \"./components/Firebase\";\n\nfunction App() {\n  React.useEffect(() => {\n    getTodos();\n  }, []);\n\n  const saveTodo = (input) => {\n    var todo = {\n      item: input,\n    };\n    if (input.trim() !== \"\") {\n      const saveToFirebase = firebase.firestore();\n      saveToFirebase\n        .collection(\"todos\")\n        .add({\n          todo,\n        })\n        .then((snapshot) => {\n          todo.id = snapshot.id;\n          snapshot.set(todo);\n          setInput(\"\");\n        });\n    }\n  };\n  const [todos, setTodos] = React.useState([]);\n  const getTodos = () => {\n    const getFromFirebase = firebase.firestore().collection(\"todos\");\n    getFromFirebase.onSnapshot((querySnapShot) => {\n      const saveFirebaseTodos = [];\n      querySnapShot.forEach((doc) => {\n        saveFirebaseTodos.push(doc.data());\n        \n      });\n      setTodos(saveFirebaseTodos);\n    });\n  };\n  //saveTodo(\"Test is succesful\");\n  const [input, setInput] = React.useState(\"\");\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1 id=\"heading\">To-Do!</h1>\n        <div id=\"inputBar\">\n          <input\n            id=\"inputTextbox\"\n            placeholder=\"Add todo...\"\n            type=\"text\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n          ></input>\n          <button id=\"addTaskButton\" onClick={() => saveTodo(input)}>\n            <h1 id=\"addTaskButtonText\">+</h1>\n          </button>\n        </div>\n        \n        <div id=\"todoContainer\" style={{ overflowY: \"scroll\" }}>\n          {todos.map((todo) => (\n            <TodoCard id={todo.id} text={todo.item} />\n          ))}\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}